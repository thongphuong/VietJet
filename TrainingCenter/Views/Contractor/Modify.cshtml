@using TMS.Core.App_GlobalResources
@model TMS.Core.ViewModels.Contractors.ContractorModels
@{
    ViewBag.Title = "Modify";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section breadcrumb{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"><i class="fas fa-database"></i> @Resource.lblMasterData - @Resource.lblContractor @(!Model.Id.HasValue ? @Resource.lblCreate : @Resource.lblEdit)</h1>
            <ol class="breadcrumb">
                <li><a href="/">@Resource.lblHome</a></li>
                <li>@Resource.lblMasterData</li>
                <li class="active">@Resource.lblContractor @(!Model.Id.HasValue ? @Resource.lblCreate : @Resource.lblEdit)</li>
            </ol>
        </div>
    </div>
}

<div class="panel list-panel" id="list-panel">
    <div class="panel-heading list-panel-heading">
        <h1 class="panel-title list-panel-title"><i class="fas fa-pencil-alt font-small-byhoa" aria-hidden="true"></i> @(!Model.Id.HasValue ? @Resource.lblCreate : @Resource.lblEdit)</h1>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Modify", "Contractor", FormMethod.Post, new { @class = "form-horizontal bordered-row", id = "createform" }))
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-12">
                    @Html.HiddenFor(model => model.Id)
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group" style="margin-left: 5px">

                        <label class="col-md-2">Contract Type<font color="red">(*)</font></label>
                        <div class="col-md-4">
                            <select name="ContractorType" id="ContractorType" class="form-control" data-placeholder="-- Contract Type --" onchange="Changecode()">
                                <option value="TTT">Company Contract</option>
                                <option value="TTR">Personal Contract</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group" style="margin-left: 5px">

                        <label class="col-md-2">@Resource.lblCode <font color="red">(*)</font></label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" , @readonly="readonly"} })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-md-2">@Resource.lblSortName <font color="red">(*)</font></label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.SortName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SortName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group" style="margin-left: 5px">
                        <label class="col-md-2">@Resource.lblFullName</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-md-2">@Resource.USER_ADDRESS</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group" style="margin-left: 5px">
                        <label class="col-md-2">@Resource.lblDescription</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        <label class="col-md-2">@Resource.lblTaxCode</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.SerialNumberTax, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SerialNumberTax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="action-form text-right">
                @{if (User.IsInRole("/Contractor/Modify")) // neu co
                    {
                        <a href="javascript:void(0)" class="btn btn-primary  legitRipple" id="submit" onclick="submit()"><i class="fas fa-save" aria-hidden="true"></i> @Resource.lblSave</a>
                    }
                }
                <a onclick="goBack()" class="btn btn-default legitRipple"><i class="fas fa-sign-out-alt" aria-hidden="true"></i> @Resource.lblBack</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            Changecode();
        })
        function submit() {
            $('#submit').hide();
            spinner.open();
            var form = $("#createform").serialize();
            $.ajax({
                type: 'POST',
                url: "/Contractor/Modify",
                datatype: 'json',
                data: form,
                success: function (data) {
                    if (data.result) {
                        window.location.href = '/Contractor';
                        notify.alert(data.message, 'Success', TITLE_STATUS_SUCCESS);
                    }
                    else {
                        notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                    }
                }
                , complete: function () {
                    $('#submit').show();
                    spinner.close();
                }
            });
        }
        function Changecode() {
            var valuetype = $("#ContractorType").val();
            $.ajax({
                type: 'POST',
                url: "/Contractor/CreateCode",
                datatype: 'json',
                data: { valuetype: valuetype },
                success: function (data) {
                    $("#Code").val(data);
                }
            });
        }
    </script>
}
