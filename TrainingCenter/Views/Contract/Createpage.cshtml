@using TMS.Core.App_GlobalResources
@using TMS.Core.Utils
@model TMS.Core.ViewModels.Contracts.ContractModels
@{
    ViewBag.Title = "Modify";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@section breadcrumb{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"><i class="fab fa-keycdn"></i> @Resource.lblContractManagement - @Resource.lblCreate</h1>
            <ol class="breadcrumb">
                <li><a href="/">@Resource.lblHome</a></li>
                <li><a href="/Contract/Index">@Resource.lblContractManagement</a> </li>
                <li class="active">@Resource.lblCreate</li>
            </ol>
        </div>
    </div>
}

<div class="panel list-panel" id="list-panel">
    <div class="panel-heading list-panel-heading">
        <h1 class="panel-title list-panel-title"><i class="fas fa-pencil-alt font-small-byhoa" aria-hidden="true"></i> @Resource.lblCreate </h1>
    </div>
    <div class="panel-body center-block">
        @using (Html.BeginForm("Modify", "Contract", FormMethod.Post, new { id = "createform" }))
        {
            @Html.AntiForgeryToken()
            @*<input type="hidden" id="hd_id" name="id" value="@Model.Id" />*@
            <div class="row">
                @Html.HiddenFor(model => model.Id)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-md-6">
                    <label>@Resource.lblContractor </label>
                    @Html.DropDownListFor(m => m.ContractorID, new SelectList(Model.ContractorList.OrderBy(a => a.Value), "Key", "Value", Model.ContractorID), new Dictionary<string, object> { { "class", "form-control" }, { "data-placeholder", "--Contractor--" }, { "onchange", "ChangeCode()" } })
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblCode <font color="red">(*)</font></label>
                    <input type="text" id="str_Code" name="str_Code" value="@Model.Code" data-parsley-required-message="Required Fields" required class="form-control" readonly="readonly">
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblContractNo <font color="red">(*)</font></label>
                    <input type="text" name="str_Contractno" value="@Model.ContractNO" class="form-control">
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label>@Resource.lblDescription </label>
                    <input type="text" name="str_Description" value="@Model.Description" class="form-control">
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblSignDate <font color="red">(*)</font></label>
                    <input type="text" id="dtm_Signdate" name="dtm_Signdate" value="@(Model.SignDate != null ? Model.SignDate.Value.ToString() : "")" class="form-control date-picker" required>
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblExpireDate <font color="red">(*)</font></label>
                    <input type="text" id="dtm_Expiredate" name="dtm_Expiredate" value="@(Model.Expiredate != null ? Model.Expiredate.Value.ToString() : "")" class="form-control date-picker" required onclick=" check() ">
                </div>
            </div>
            <div class="row">                
                <div class="form-group col-md-3">
                    <label>@Resource.lblStatus </label>
                    @Html.DropDownListFor(m => m.StatusID, new SelectList(Model.StatusList, "Key", "Value", Model.StatusID), new Dictionary<string, object> { { "class", "form-control" }, { "data-placeholder", "--Status--" } })
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblPrice </label>
                    <input type="number" name="mon_Price" value="@Model.Price" class="form-control">
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblCurrency </label>
                    @Html.DropDownListFor(m => m.Currency, new SelectList(Model.Curencylist, "Key", "Value", Model.Currency), new { @class = "form-control" })
                </div>
                <div class="form-group col-md-3">
                    <label>@Resource.lblType </label>
                    @Html.DropDownListFor(m => m.TypeID, new SelectList(Model.TypeList, "Key", "Value", Model.TypeID), new Dictionary<string, object> { { "class", "form-control" }, { "data-placeholder", "--Type--" } })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    <label>@Resource.lblNote</label>
                    <textarea name="str_Note" value="@Model.Note" class="form-control" rows="3"></textarea>
                </div>
            </div>
            <div class="divider"></div>
            <div class="divider"></div>
            <div class="form-group col-lg-12">
                <div id="messageout">
                </div>
            </div>
        }
        <div class="row">
            <div class="action-form text-right">
                @{
                    if (User.IsInRole("/Contract/Modify"))
                    {
                        <a href="javascript:void(0)" class="btn btn-primary legitRipple" id="submit" onclick=" submit() "><i class="fas fa-save" aria-hidden="true"></i> @Resource.lblSave</a>
                        <a onclick=" goBack() " class="btn btn-default legitRipple"><i class="fas fa-sign-out-alt" aria-hidden="true"></i> @Resource.lblBack</a>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            ChangeCode();
            formatDatetimepicker('.date-picker', '@Resource.lblLanguage');
        });

        function check() {

            var minDate = $("#dtm_Signdate").data('DateTimePicker').date().startOf('day');
            $('#dtm_Expiredate').data("DateTimePicker").minDate(minDate);

        }
        //function check1() {

        //    var maxDate = $("#dtm_Expiredate").data('DateTimePicker').date().startOf('day');
        //    $('#dtm_Signdate').data("DateTimePicker").maxDate(maxDate);

        //}
        function submit() {
            spinner.open();
            var form = $("#createform").serialize();
            $.ajax({
                type: 'POST',
                url: "/Contract/Modify",
                datatype: 'json',
                data: form,
                success: function (data) {
                    if (data.result) {
                        notify.alert(data.message, 'Success', TITLE_STATUS_SUCCESS);
                        window.location.href = '/Contract';
                    }
                    else {
                        notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                    }
                }
                , complete: function () {
                    spinner.close();
                }
            });
        }
        function ChangeCode() {
            var valuetype = $("#ContractorID").val();
            $.ajax({
                type: 'POST',
                url: "/Contract/GenerateCode",
                datatype: 'json',
                data: { valuetype: valuetype },
                success: function (data) {
                    $("#str_Code").val(data);
                }
            });
        }
    </script>
}




