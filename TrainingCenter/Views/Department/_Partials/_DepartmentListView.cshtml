@{
    var code = "";
    var lvl = 1;
    var currentlvl = 1;
    string root = "";
    if (Model != null && Model.DepartmentViewModels.Any())
    {
        root = Model.DepartmentViewModels.First().Ancestor.Split(new char[] { '!' })[0];
    }
}
@model TMS.Core.ViewModels.Departments.DepartmentViewModel
@if (Model != null)
{
    foreach (var permission in Model.DepartmentViewModels)
    {
        if (!string.IsNullOrEmpty(code))
        {
            if (permission.Ancestor.StartsWith(root + "!"))
            {
                currentlvl = permission.Ancestor.Count(a => a.Equals('!')) + 1;
                if (currentlvl > lvl && permission.Ancestor.StartsWith(code))
                {
                    @:<ul class='nav-second-level'>
                    }
                    else
                    {
                        @:</li>
                        if (currentlvl > lvl)
                        {
                            currentlvl = lvl - 1;
                        @:</ul>
                    }
                    else
                    {
                        var closeNode = lvl - currentlvl;
                        if (closeNode == 0 && lvl > 1)
                        {
                            @:</li>
                        }
                        for (var i = 0; i < closeNode; i++)
                        {
                            @:</li></ul>
                        }
                    }
                }
            }
            else
            {
                for (var i = 1; i < lvl; i++)
                {
                    @:</li></ul>
                }
                currentlvl = 1;
                lvl = 1;
                root = permission.Ancestor.Split(new char[] { '!' })[0];
            }
        }
        code = permission.Ancestor;
        lvl = currentlvl;
        if (Model.IsMaster)
        {
            @:<li class='line_@permission.Id'>
                @:<a href="javasciprt:void(0)" onclick="active(@permission.Id)" title='@permission.DepartmentName'> @permission.DepartmentName</a>
                @:<span class="text-success action" onclick="active(@permission.Id)" title="Edit department"><i class="fas fa-edit"></i></span>
                if (permission.IsActive)
                {
                    @:<span class="text-warning action updatestatus" title="Lock department" data-id="@permission.Id"><i class="fa fa-lock"></i></span>
                }
                else
                {
                    @:<span class="text-success action updatestatus" title="Unlock department" data-id="@permission.Id"><i class="fa fa-unlock"></i></span>
                }
                <text>
                    <span class="text-default action deletePermission" title="Delete department" data-id="@permission.Id"><i class="fa fa-trash"></i></span>
                    @*<span class="text-success action" onclick="permission.create(@permission.Id)"><i class="fa fa-plus-square"></i></span>*@
                </text>
            }
            else
            {
                <text>
                <li class='line_@permission.Id'>
                    <a href="javasciprt:void(0)" title='@permission.DepartmentName'> @permission.DepartmentName</a>

                </text>
            }
        }
        for (var i = 1; i < currentlvl; i++)
        {
        @:</li></ul>
    }
}
