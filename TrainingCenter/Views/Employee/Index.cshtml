@using TMS.Core.App_GlobalResources
@using TMS.Core.Utils
@model TMS.Core.ViewModels.Employee.EmployeeModelIndex
@{
    var control = Model.Control == (int)UtilConstants.ROLE.Trainee;
    ViewBag.Title = "Index";
    ViewBag.ActiveMenu = control ? "Trainee" : "Instructor";
    ViewBag.ActiveSubMenu = control ? "Trainee" : "Instructor";
}

@section breadcrumb{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"><i class="fas @(control ? "fa-user-graduate" : "fa-user-tie")"></i> @(control ? Resource.lblTraineeManagement : Resource.lblInstructorManagement) - @(control ? Resource.lblTraineeList : Resource.lblInstructorList)</h1>
            <ol class="breadcrumb">
                <li><a href="/">@Resource.lblHome</a></li>
                <li>@(control ? Resource.lblTraineeManagement : Resource.lblInstructorManagement)</li>
                <li class="active">@(control ? Resource.lblTraineeList : Resource.lblInstructorList)</li>
            </ol>
        </div>
    </div>
}

<div id="divFilePopup" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("ImportAvatar", "Employee", FormMethod.Post, new { id = "frmImport" }))
            {
                <div class="modal-header">
                    <h4>@Resource.lblFileImport</h4>
                </div>
                <div class="modal-body">
                    <table id="FileAvatar" class="table table-striped table-bordered">
                        <thead>
                            <tr role="row">
                                <th>@Resource.lblFile</th>
                                <th>@Resource.lblStatus</th>
                        </thead>
                        <tbody></tbody>
                        <tbody role="alert" aria-live="polite" aria-relevant="all"></tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-goback" data-dismiss="modal">@Resource.lblClose</button>
                </div>
            }
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="panel list-panel" id="list-panel">
            <div class="panel-heading list-panel-heading">
                <h1 class="panel-title list-panel-title">
                    <i class="fas fa-list-ul font-small-byhoa" aria-hidden="true"></i> @(control ? Resource.lblTraineeList : Resource.lblInstructorList)
                    <p class="btn-group pull-right">
                        <a id="btnExport" class="btn btn-success btn-xs dropdown-toggle legitRipple"><i class="fa fa-download" aria-hidden="true"></i> @Resource.lblEXPORT</a>
                        @if (User.IsInRole(Url.Action("Modify", "Employee")))
                        {
                            <a href="/Employee/Modify/?type=@(control ? (int)UtilConstants.ROLE.Trainee  : (int) UtilConstants.ROLE.Instructor)" class="btn btn-success btn-xs dropdown-toggle legitRipple"><i class="fa fa-plus" aria-hidden="true"></i> @Resource.lblCreate</a>
                        }
                    </p>
                </h1>
            </div>
            <div class="panel-body table-responsive">
                <div id="panel-import" class="hidden panel">
                    <div class="panel-body">
                        <label>Import Avatar</label><input onchange="ImportAvatar()" type="file" id="AvatarFile" multiple />
                    </div>
                    <br />
                </div>
                <div class="row">
                    @*<p class="pull-right" data-toggle="collapse" data-target="#panel-search" style="cursor:pointer;" id="call-panel-search"><i class="fa fa-search"></i> @Messege.Search</p>*@
                    <p class="pull-right" style="margin-right:10px !important; cursor: pointer;" id="call-panel-import">@Resource.lblImport</p>
                </div>
                <div id="panel-search1" class="panel">
                    @using (Html.BeginForm("AjaxHandler", "Employee", FormMethod.Post, new { id = "frmFilter" }))
                    {
                        <input type="hidden" class="form-control frmFilter" id="control" name="control" value="@(control ? (int) UtilConstants.ROLE.Trainee : (int) UtilConstants.ROLE.Instructor)" />
                        <div class="panel-body">
                            <div class="row col-md-12">
                                <div class="row">
                                    <div class="col-md-3">
                                        <label>@Messege.EIDGV</label>
                                        <input type="text" name="fStaffId" id="fStaffId" class="form-control frmFilter" placeholder="@Messege.EIDGV" />
                                    </div>
                                    <div class="col-md-3">
                                        <label>@Resource.lblFullName</label>
                                        <input type="text" name="fName" id="fName" class="form-control frmFilter" placeholder="@Resource.lblFullName" />
                                    </div>
                                    <div class="col-md-3">
                                        <label>@Resource.lblGender</label>
                                        @Html.DropDownList("Genders", Model.Genders, "", new { @class = "form-control combobox frmFilter", data_placeholder = "--" + @Resource.lblGender + "--" })
                                    </div>
                                    <div class="col-md-3">
                                        <label>@Resource.lblEmail</label>
                                        <input type="text" name="fEmail" id="fEmail" class="form-control frmFilter" placeholder="@Resource.lblEmail" />
                                    </div>
                                </div>
                                <div class="row" style="margin-top: 10px;">
                                    <div class="col-md-3">
                                        <label>@Resource.lblPhone</label>
                                        <input type="text" name="fPhone" id="fPhone" class="form-control frmFilter" placeholder="@Resource.lblPhone" />
                                    </div>
                                    <div class="col-md-3">
                                        <label>@Resource.lblDepartment</label>
                                        <select class="form-control frmFilter" name="DepartmentList" id="DepartmentList" data-placeholder="-- @Resource.lblDepartment --">
                                            <option></option>
                                            @Html.Raw(Model.Departments)
                                        </select>

                                    </div>
                                    <div class="col-md-3">
                                        <label>@Resource.lblJobTitle_Occupation</label>
                                        @Html.DropDownList("JobTitleList", Model.JobTitles, "", new { @class = "form-control combobox frmFilter", data_placeholder = "--" + @Resource.lblJobTitle_Occupation + "--" })
                                    </div>
                                    <div class="col-md-3">
                                        <label>@Messege.TYPE</label>
                                        @Html.DropDownList("Type", Model.Type, "", new
                                        {
                                            @id = "ddl_TYPE",
                                            @class = "form-control frmFilter",@*@onchange = "onchangetype()",*@@data_placeholder = "--" + Messege.TYPE + "--"
})
                                    </div>
                                </div>
                                <div class="row" style="margin-top: 10px">
                                    @if (Model.SearchMentor && !control)
                                    {
                                        <div class="col-md-3">
                                            <label>Đối tượng</label>
                                            @Html.DropDownList("Mentor", Model.Mentor, "", new { @class = "form-control frmFilter", @data_placeholder = "--" + Resource.lblMentor + "--", @multiple = "multiple" })
                                        </div>
                                    }

                                    <div class="col-md-1 pull-right">
                                        <label>&nbsp;</label>
                                        <button type="submit" class="btn btn-primary pull-right" id="btFilter">
                                            <i class="fa fa-search"></i> @Resource.lblSearch
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <br />
                </div>

                <table id="Trainee" class="table table-striped table-bordered">
                    <thead>
                        <tr role="row">
                            <th style="width: 5%;">@Resource.lblStt</th>
                            <th>@Resource.TRAINEE_EID</th>
                            <th>@Resource.lblFullName</th>
                            <th>@Resource.lblGender</th>
                            <th>Email</th>
                            <th>@Resource.lblPhone</th>
                            <th>@Resource.lblJobTitle_Occupation</th>
                            <th>@Resource.lblDepartment</th>
                            <th>@Resource.lblType</th>
                            @*<th>@Resource.lblTarget</th>*@
                            <th>@Resource.lblStatus</th>
                            <th style="width: 10%;">@*@Resource.lblOptions*@</th>
                    </thead>
                    <tbody></tbody>
                    <tbody role="alert" aria-live="polite" aria-relevant="all"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            @*<div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>*@
            <div class="modal-body">
                <label>@Messege.DELETE_INSTRUCTOR</label>
                <div class="row" style="margin-top: 10px;">
                    <div class="col-md-12">
                        <div id="messageout2">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" id="Modal_Footer">
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        var sTable;
        $(document).ready(function () {
            var customRow = [
                {
                    "targets": 9,
                    "className": "text-center",
                }
            ];
            sTable = initDataTable('#Trainee', '/Employee/AjaxHandler', customRow);
            $('#frmFilter').submit(function (e) {
                e.preventDefault();
                sTable.draw();
            });
            $('#myModal').on('hidden.bs.modal', function () {
                sTable.fnDraw();
            });

            $('#btnExport').click(function () {
                exportExcel();
            });

            $("#call-panel-import").on("click",function () {
                if ($("#panel-import").hasClass("hidden")) {
                    $("#panel-import").removeClass("hidden")
                }
                else {
                    $("#panel-import").addClass("hidden");
                }
            });
        });

        function exportExcel() {

            var params = {
                fStaffId: $('#fStaffId').val(),
                fName: $('#fName').val(),
                fGender: $('#Genders').val(),
                fEmail: $('#fEmail').val(),
                fPhone: $('#fPhone').val(),
                ComOrDepId: $('#DepartmentList').val(),
                fJobTitle: $('#JobTitleList').val(),
                ddl_TYPE: $('#Type').val(),
                Mentor: $('#Mentor').val(),
                control: $('#control').val(),
            };
            var str = jQuery.param(params);
            window.location.href = "/Employee/ExportEXCEL?" + str;


        }

        function Set_Participate_Employee(isParticipate, id) {
            spinner.open();
            $.ajax({
                type: 'POST',
                url: "/Employee/SubmitSetParticipateEmployee",
                datatype: 'json',
                data: { isParticipate: isParticipate, id: id },
                success: function (data) {
                    if (data.result) {
                        sTable.draw();
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                    } else {
                        notify.alert(data.message, 'ERROR', TITLE_STATUS_DANGER);
                    }
                }, complete: function () {
                    spinner.close();
                }
            });
        }
        function calldelete(id) {
            notify.confirm('@(string.Format(Messege.DELETE_OBJECT," data"))', 'Confirm', TITLE_STATUS_WARNING, deletesubmit, id);
        }
        function deletesubmit(id) {
            spinner.open();
            $.ajax({
                type: 'POST',
                url: "/Employee/Delete",
                datatype: 'json',
                data: { id: id },
                success: function (data) {
                    if (data.result) {
                        sTable.draw();
                        notify.alert(data.message, 'Success', TITLE_STATUS_SUCCESS);
                    }
                    else {
                        notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                        sTable.draw();
                    }

                }, complete: function () {
                    spinner.close();
                }
            });
            }

        function syncUserToPortal(id) {
                spinner.open();
                $.ajax({
                    type: 'POST',
                    url: "/Employee/SyncUserToPortal",
                    datatype: 'json',
                    data: { id: id },
                    success: function (data) {
                        if (data.result) {
                            sTable.draw();
                            notify.alert(data.message, 'Success', TITLE_STATUS_SUCCESS);
                        }
                        else {
                            notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                        }

                    }, complete: function () {
                        spinner.close();
                    }
                });
            }

        function callrandom(name, id) {
            var message = "@Messege.WARNING_SEND_NEW_PASS".replace("{0}", name);
            notify.confirm(message, "Confirm", TITLE_STATUS_SUCCESS, passwordRandomSubmit, id);

        }

        function passwordRandomSubmit(id) {
            spinner.open();
            $.ajax({
                type: 'POST',
                url: "/Employee/RandomResetPassword",
                datatype: 'json',
                data: { id: id },
                success: function (data) {
                    if (data.result) {
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                    }
                    else {
                        notify.alert(data.message, 'ERROR', TITLE_STATUS_DANGER);
                    }
                }, complete: function () {
                    spinner.close();
                }
            });
        }
        var listfile = []
         function openFile(file) {
            var extension = file.substr((file.lastIndexOf('.') + 1));
            var list = ["jpg", "jpeg", "exif", "tiff", "gif", "bmp", "png", "ppm", "pgm", "pbm", "pnm",]
            if (list.includes(extension)) {
                return true;
            }
            else {
                listfile.push(file)
                return false;

            }
        };

        function ImportAvatar() {
            spinner.open();
            var formdata = new FormData();
            var fileInput = document.getElementById('AvatarFile');
            for (i = 0; i < fileInput.files.length; i++) {
                var sfilename = fileInput.files[i].name;
                 var checkExt = openFile(sfilename);
                if (checkExt) {
                    formdata.append(sfilename, fileInput.files[i]);
                }
            }
            if (listfile.length > 0) {
                var listfilename = "<ul>";
                listfile.forEach(function (value) {
                    listfilename += "<li>" + value + "</li>"
                })
                listfilename += "</ul>"
                notify.alert('@Messege.WARNING_EXTENSION_FILE' + "<br>" + listfilename, 'ERROR', TITLE_STATUS_DANGER);
                $("#AvatarFile").val("");
                listfile = []
                spinner.close();
            }
            else {
                $.ajax({
                url: '/Employee/CheckFile',
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: formdata,
                async: false,
                success: function (obj) {
                    if (obj.result) {
                        var x = JSON.parse(obj.data);
                        $('#FileAvatar').DataTable({
                            "search": false,
                            "data": x,
                            "columns": [
                                { "data": "filename" },
                                { "data": "status" },
                            ]
                        } );
                    }
                    spinner.close();
                },
                    error: function (err) {
                        spinner.close();
                }
                });
            $("#AvatarFile").val("");
            $("#divFilePopup").modal();
            }
        }
    </script>
}
