@using TMS.Core.App_GlobalResources
@using TMS.Core.Utils
@model TMS.Core.ViewModels.PostNews.PostNewsModel
@{
    ViewBag.Title = "Modify";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/CKEditor/ckeditor.js"></script>
@section breadcrumb{

    <div class="row">
        <div class="col-md-12">
            <h1 class="page-header"><i class="far fa-newspaper"></i> @Resource.lblPostNewsManagement - @(Model.Id == -1 ? Resource.lblCreate : Resource.lblEdit ) </h1>
            <ol class="breadcrumb">
                <li><a href="/Home">@Resource.lblHome</a></li>
                <li>@Resource.lblPostNewsManagement</li>
                <li class="active">@(Model.Id == -1 ? Resource.lblCreate : Resource.lblEdit )</li>
            </ol>
        </div>
    </div>
}

<div class="panel" id="list-panel">
    <div class="panel-heading">
        <h1 class="panel-title list-panel-title"><i class="fas fa-pencil-alt font-small-byhoa" aria-hidden="true"></i> @(Model.Id == -1 ? Resource.lblCreate : Resource.lblEdit ) </h1>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Modify", "PostNews", FormMethod.Post, new { @class = "form-horizontal bordered-row", id = "createform" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ImgName)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="col-md-2">

                            <div class="profile-button">
                                <label>@Resource.lblImage </label>
                                <br />
                                <label class="btn btn-default btn-file">
                                    <i class="fa fa-upload" aria-hidden="true" style="font-size: 22px;"></i> <input type="file" name="ImgFile" id="uploadEditorImage" style="display: none;" />
                                </label>
                            </div>
                        </div>

                        <div class="col-md-8">
                            <div class="box-shadow">
                                <img width="100%" height="360px" src="@(string.IsNullOrEmpty(Model.ImgName) ? "/Uploads/avatar/empty-image.png" : string.Format("{0}{1}",UtilConstants.PathImage,Model.ImgName))" class="center-block" id="blah2" />
                            </div>
                        </div>


                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-12">
                            <label>@Resource.lblTitle</label>
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = Resource.lblTitle } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">

                        <div class="col-md-3">
                            <label>@Resource.lblStartDate @*<font color="red">(*)</font>*@</label>
                            <div class="col-md-12">
                                <div class="form-group no-padding">
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control pull-right", @placeholder = Resource.lblStartDate } })
                                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label>@Resource.lblEndDate @*<font color="red">(*)</font>*@</label>
                            <div class="col-md-12">
                                <div class="form-group no-padding">
                                    <div class="input-group">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control pull-right", @placeholder = Resource.lblEndDate } })
                                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label>@Resource.lblTypePostNews</label>
                            <select class="form-control select createform" name="Type" id="Type" data-placeholder="--- @Resource.lblTypePostNews ---" onchange="changegroup(this)">
                                <option></option>
                                <option value="1" @(Model.Type != -1 && Model.Type == 1 ? "selected" : "")>@Resource.lblPostNews</option>
                                <option value="0" @(Model.Type != -1 && Model.Type == 0 ? "selected" : "")>@Resource.lblPostNotification</option>
                                <option value="2" @(Model.Type != -1 && Model.Type == 2 ? "selected" : "")>@Resource.lblPostWelcome</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @*<div class="col-md-1">
                                <label>Sort</label>
                                @Html.EditorFor(model => model.Sort, new { htmlAttributes = new { @class = "form-control pull-right", @placeholder = "Sort" } })
                                @Html.ValidationMessageFor(model => model.Sort, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5">

                            </div>*@
                        <div class="col-md-6" id="CategoryList" @(Model.Type == 2 ? "hidden" : "")>
                            <label>@Resource.lblCategory</label>
                            <select class="form-control select createform" name="Category" id="Category" data-placeholder="--- @Resource.lblCategory ---">
                                <option></option>
                                @if (Model.Categories != null)
                                {
                                    foreach (var item in Model.Categories)
                                    {
                                        <option value="@item.Key" @(Model.Category != -1 && Model.Category == item.Key ? "selected" : "")>@item.Value</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-6" id="GroupTraineeList" @(Model.Type != 0 ? "hidden" : "")>
                            <label>@Resource.lblGroupTrainee <font color="red">(*)</font></label>
                            <select multiple="multiple" class="form-control select createform" name="GroupTraineeListID" id="GroupTraineeListID" data-placeholder="@Resource.lblGroupTrainee">
                                @if (Model.GroupTrainee != null)
                                {
                                    foreach (var item in Model.GroupTrainee)
                                    {
                                        <option value="@item.Key" @(Model.GroupTraineeListID != null && Model.GroupTraineeListID.Contains(item.Key) ? "selected" : "")> @item.Value</option>
                                    }
                                }

                            </select>

                        </div>

                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-12">
                            <label>@Resource.lblContent</label>
                            @Html.TextAreaFor(model => model.Content, new { @id = "Content", @class = "form-control", @rows = "500", @style = "border:solid 1px #df3333", @placeholder = @Resource.lblContent })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-6">
                            <label>@Resource.lblDescription </label>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @placeholder = @Resource.lblDescription })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>

        }
        <div class="row">
            <div class="col-md-12">
                <div class="action-form text-right">
                    <a href="javascript:void(0);" class="btn btn-primary  legitRipple" id="submit" onclick=" actionSubmit() "><i class="fas fa-save" aria-hidden="true"></i> @Resource.lblSave</a>
                    <a onclick="goBack()" class="btn btn-default legitRipple"><i class="fas fa-sign-out-alt" aria-hidden="true"></i> @Resource.lblBack</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        CKEDITOR.replace("Content");
        $(document).ready(function () {
            formatDatetimepicker('#StartDate', '@Resource.lblLanguage');
            formatDatetimepicker('#EndDate', '@Resource.lblLanguage');

        });
        function changegroup(id) {
            var value = id.value;
            console.log(value);
            if (value == 0) {
                $('#GroupTraineeList').removeAttr("hidden");

            } else {
                $('#GroupTraineeList').attr("hidden", true);
            }

            if (value != 2) {
                $('#CategoryList').removeAttr("hidden");

            } else {
                $('#CategoryList').attr("hidden", true);
            }

        }


        function readURL(input) {

            var fsize = 1024 * 1024 * 2;

            if (input.files[0].size < fsize) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#blah2').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }
            else {

                notify.alert("Allowed file size exceeded. (Max. 2 MB)", 'Warning', TITLE_STATUS_DANGER);

            }
        }

        $("#uploadEditorImage").change(function () {
            readURL(this);
        });




        function actionSubmit() {
            spinner.open();
            $("#Content").val(CKEDITOR.instances['Content'].getData());
            var form = document.getElementById('createform');
            var formData = new FormData(form);
            console.log(form);
            $.ajax({
                type: 'POST',
                url: "/PostNews/Modify",
                datatype: 'json',
                data: formData,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.result) {
                        window.location.href = '/PostNews';
                        notify.alert(data.message, 'Success', TITLE_STATUS_SUCCESS);
                    }
                    else {
                        notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                    }
                }
                , complete: function () {
                    spinner.close();
                }
            });
        }
    </script>

}




