@using TMS.Core.App_GlobalResources
@using TMS.Core.Utils
@model TMS.Core.ViewModels.Orientation.OrientationViewModel
@{
    ViewBag.Title = "OrientationEmp";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var i = 0;
}

@section breadcrumb{

    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"><i class="fas fa-key"></i>  @Resource.lblPotentialSuccessors</h1>
            <ol class="breadcrumb">
                <li><a href="/">@Resource.lblHome</a></li>
                <li>@Resource.lblSuccessorsTrainingPlan</li>
                <li class="active">@Resource.lblPotentialSuccessors</li>
            </ol>
        </div>
    </div>
}

<div id="divOrientation">
    <div class="col-md-12">
        <div class="col-md-9" style="margin-top: 10px;">
            <div class="panel list-panel" id="list-panel">
                <div class="panel-body">
                    <div class="col-md-12" id="panel_left">
                        @*---------------------------------------*@
                        <div class="row" id="frmFilter">
                            <input class="frmFilter" type="hidden" name="valuecurrent" id="valuecurrent" />
                            <div class="col-md-12" style="margin-top: 10px;">
                                <div class="col-md-1">
                                    <label>@Resource.lblDepartment</label>
                                </div>
                                <div class="col-md-3">
                                    <select class="form-control frmFilter" id="DepartmentList2" name="DepartmentList2" data-placeholder="-- @Resource.lblDepartment --" onchange=" Changedepartment2(this.value) ">
                                        <option></option>
                                        @Html.Raw(Model.Departments)
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <label>@Resource.lblFullName</label>
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("FullName2", null, new { @class = "form-control frmFilter" })
                                </div>
                                <div class="col-md-1">
                                    <label>@Messege.EID</label>
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("EID2", null, new { @class = "form-control frmFilter" })
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top: 10px;">
                                <div class="col-md-1">
                                    <label>@Resource.lblJobTitle_Occupation</label>
                                </div>
                                <div class="col-md-3">
                                    <select class="form-control frmFilter" id="JobtitleList2" name="JobtitleList2" data-placeholder="-- @Resource.lblJobTitle_Occupation --">
                                        <option></option>
                                        @if (Model.JobTitles != null)
                                        {
                                            foreach (var item in Model.JobTitles)
                                            {
                                                <option value="@item.Key">@item.Value </option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <label>@Resource.lblGroupTrainee</label>
                                </div>
                                <div class="col-md-3">
                                    <select class="form-control frmFilter" id="GroupTrainee2" name="GroupTrainee2" data-placeholder="-- Group Trainee --">
                                        <option></option>
                                        @if (Model.GroupTrainees != null)
                                        {
                                            foreach (var item in Model.GroupTrainees)
                                            {
                                                <option value="@item.Key">@item.Value </option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-1">
                                    <button type="button" id="btFilter2" class="btn btn-primary">@Resource.lblSearch</button>
                                </div>
                            </div>
                        </div>




                        @*--------------------------------------------*@


                        <div class="row" style="margin-top: 10px;">
                            <div id="DetailEmployee">
                                @{Html.RenderAction("PartialDetailSimple", "Employee"); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3" style="margin-top: 10px;">
            <div class="panel list-panel" id="list-panel">
                <div class="panel-body">
                    <div class="col-md-12" id="panel_right">
                        <div class="row" style="margin-top: 10px;">
                            <div class="col-md-12 control-label">
                                <label>@Resource.lblFuturePosition</label>
                                <div id="divListJob">
                                    @{Html.RenderAction("OrientationEmpListJob", "Orientation" , new { jobFutureId = Model.JobFuture, idsuccessor = Model.Id});}
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                @*<div class="col-md-6 pull-left" style="margin-top:10px;">
                    <button type="button" class="btn btn-primary legitRipple" onclick="Review()"><i class="fas fa-eye" id="icon-password"></i>&nbsp;Review</button>
                </div>*@
            </div>
        </div>
    </div>
    <div class="col-md-12 text-center">
        <button type="button" class="btn btn-primary legitRipple" onclick="Review()"><i class="fas fa-arrow-down" id="icon-password"></i></button>
        <button type="button" class="btn btn-primary legitRipple" onclick="Clear()"><i class="fas fa-arrow-up" id="icon-password"></i></button>

    </div>
    <div class="col-md-12 "  style="margin-top: 10px;">
        <div class="col-md-12">
            <div class="panel list-panel" id="list-panel">
                <div class="panel-heading list-panel-heading">
                    <h1 class="panel-title list-panel-title">
                        <i class="fas fa-list-ul font-small-byhoa" aria-hidden="true"></i> @Resource.lblPotentialSuccessors
                    </h1>
                </div>
                <div class="panel-body">
                    <form id="createform">
                        <input type="hidden" name="IdSuccessor" id="IdSuccessor" value="@Model.Id"/>
                        <div class="col-md-12 table-responsive" style="margin-top:10px;">
                            <table id="Table_Orientation" class="table table-striped table-bordered" cellspacing="0" width="100%">
                                <thead class="cf">
                                    <tr role="row">
                                        <th style="width: 5%;">@Resource.lblStt</th>
                                        <th style="width: 8%;">@Messege.EID</th>
                                        <th style="width: 15%;">@Resource.lblEmployeeName</th>
                                        <th style="width: 15%;">@Resource.lblCurrentPosition</th>
                                        <th style="width: 15%;">@Resource.lblFuturePosition</th>
                                        <th style="width: 5%;"><input type="checkbox" name="select_all3" value="1" id="example-select-all3" /></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if(Model.OrientationModify != null)
                                    {
                                        var count = 1;
                                        foreach (var item in Model.OrientationModify)
                                        {
                                            <tr class="my-class">
                                                <td  class="text-center">@count</td>
                                                <td>
                                                    <input class="EmployeeID" type="hidden" name="EmployeeID" id="EmployeeID" value="@item.EmployeeID">
                                                    @item.EmployeeEID
                                                </td>
                                                <td>@item.EmployeeName</td>
                                                <td>
                                                    <input class="JobTitleID" type="hidden" name="JobTitleID" id="JobTitleID" value="@item.JobTitleID">
                                                    @item.JobTitleName
                                                </td>
                                                <td>
                                                    <span data-value="@item.FuturePositionID" data-idjob="@item.FuturePositionID" class="expand" style="cursor: pointer"><a>@item.JobTitleFutureName</a></span>
                                                    <input type="hidden" name="FuturePositionID" id="FuturePositionID" value="@item.FuturePositionID">
                                                </td>
                                                <td class="text-center">
                                                    @if (item.Status != 0)
                                                    {
                                                        <input type="checkbox" name="NEmployee[]" id="NEmployee" @(item.SelectedValue ? "checked" : "")>
                                                    }

                                                </td>
                                            </tr>
                                            count++;
                                        }
                                    }


                                </tbody>
                                <tbody role="alert" aria-live="polite" aria-relevant="all"></tbody>
                            </table>
                        </div>
                    </form>

                </div>
                <div class="row">
                    <div class="action-form text-right">
                        <a class="btn btn-primary" id="saveA" onclick="actionSubmit()"><i class="fas fa-save" aria-hidden="true"></i> @Resource.lblSave</a>
                        <a onclick="goBack()" class="btn btn-default"><i class="fas fa-sign-out-alt" aria-hidden="true"></i> @Resource.lblBack</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{

    <script src="~/Scripts/js/app.js"></script>
    <script>
        var sTable;
        var sTable_tab2;
        var string_value = "";
        $(document).ready(function () {
          
            var customRowssTable = [
                {
                    "targets": 0 ,
                    "className": "text-center"
                },
                {
                    "targets": 5 ,
                    "className": "text-center",
                     "sortable": false,
                }
            ];
            

            sTable_tab2 = initDataTableMaxPageLength("#Trainee2", "/Orientation/AjaxHandlerAvailableSubject2" , customRowssTable);

            sTable = $('#Table_Orientation').DataTable({
                "columnDefs": [
                    {
                        "targets": 0 ,
                            "className": "text-center",
                        "sortable": false,
                    },
                    {
                        "targets": 5 ,
                        "className": "text-center",
                         "sortable": false,
                    }
                ],
                "pageLength": 9999,
                "processing": true,
            });
            $('#btFilter2').click(function (e) {
                string_value = "";
                $('#Table_Orientation .EmployeeID').each(function (i, v) {

                    string_value = string_value + "," + $(v).val();
                }); 
                $("#valuecurrent").val(string_value);
                sTable_tab2.ajax.reload();
             });
            //$("#frmFilter").submit(function (e) {
            //    sTable.draw();
            //    e.preventDefault();
            //});
            //var customRow = [
            //    { "targets": 5, "sortable": false }
            //];
            //sTable = initDataTable("#Table_Orientation", "/Orientation/AjaxHandleListOrientation", customRow);
            $('#btnExport').click(function () {
                window.location.href = '/Orientation/ExportOrientationEmpEXCEL';
            });
            $('#example-select-all2').on('click', function() {
                // Get all rows with search applied
                var rows = sTable_tab2.rows({ 'search': 'applied' }).nodes();
                // Check/uncheck checkboxes for all rows in the table
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
            });
            // Handle click on checkbox to set state of "Select all" control
            $('#Trainee2 tbody').on('change', 'input[type="checkbox"]', function() {
                // If checkbox is not checked
                if (!this.checked) {
                    var el = $('#example-select-all2').get(0);
                    // If "Select all" control is checked and has 'indeterminate' property
                    if (el && el.checked && ('indeterminate' in el)) {
                        // Set visual state of "Select all" control
                        // as 'indeterminate'
                        el.indeterminate = true;
                    }
                }
            });
             $('#example-select-all3').on('click', function() {
                // Get all rows with search applied
                var rows = sTable.rows({ 'search': 'applied' }).nodes();
                // Check/uncheck checkboxes for all rows in the table
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
            });
            // Handle click on checkbox to set state of "Select all" control
            $('#Table_Orientation tbody').on('change', 'input[type="checkbox"]', function() {
                // If checkbox is not checked
                if (!this.checked) {
                    var el = $('#example-select-all3').get(0);
                    // If "Select all" control is checked and has 'indeterminate' property
                    if (el && el.checked && ('indeterminate' in el)) {
                        // Set visual state of "Select all" control
                        // as 'indeterminate'
                        el.indeterminate = true;
                    }
                }
            });
            var detailRowsSubject = [];
             
            $('#Table_Orientation tbody').on('click', 'tr td span.expand', function () {

                var id = $(this).data('value');
                var tr = $(this).closest('tr');
                var row =  sTable.row(tr);
                var idx = $.inArray(tr.attr('id'), detailRowsSubject);

                if (row.child.isShown()) {
                    tr.removeClass('details');
                    row.child.hide();
                    // Remove from the 'open' array
                    detailRowsSubject.splice(idx, 1);
                } else {
                    spinner.open();
                    tr.addClass('details');
                    var tr = $(this).closest('tr');
                    var employyId = tr.find(".EmployeeID").val();
                    var data = { idJob: id, idEmp: parseInt(employyId) };
                    $.post("/Orientation/OrientationEmpListsubject", jQuery.param(data), function (response) {
                        row.child(response).show();
                    });
                    // Add to the 'open' array
                    if (idx === -1) {
                        detailRowsSubject.push(tr.attr('id'));
                    }
                    spinner.close();
                }
            });
             sTable.on('draw', function () {
                $.each(detailRowsSubject, function (i, id) {
                    $('#' + id + ' td.details-control').trigger('click');
                });
            });
        });

        function filter() {
            spinner.open();
            var listemployee = $('#editor-Trainee').val(); // default = null
            var groupemployee = $('#GroupTrainee').val();// default = ""
            spinner.close();
            @*var data = { idEmp: id };
            $.ajax({
                url: "/Orientation/OrientationEmpFilter",
                datatype: 'json',
                type: 'POST',
                data: data,
                success: function (data) {
                    debugger;
                    //$("#editorJob").val(data.data);
                    $("#DetailEmployee").load("/Employee/PartialDetailSimple?id=" + id);
                    $("#ListJobStandard").load("/Employee/PartialListJobStandard?id=" + id + "&type=" +@((int)UtilConstants.Switch.Vertical));
                    //$("#editorJob").trigger("change");
                    //$("#panel_left").css("height", "800px");
                    //$("#panel_left").css("overflow-y", "scroll");
                    //$("#panel_right").css("height", "800px");
                    //$("#panel_right").css("overflow-y", "scroll");

                    //$("#submit").show();
                },
                complete: function () {
                    //spinner.close();
                    //console.log($("#panel_right").height());
                }
            });*@
        }
        function actionSubmit() {
            //spinner.open();
            var data = getData();
            var id = $("#IdSuccessor").val();
            var jobfuture = $("#editorJob").val();
            $.ajax({
                type: 'POST',
                url: "/Orientation/ModifyForm_New",
                datatype: 'json',
                 data: { model: data, id: id, jobfuture: jobfuture},
                success: function (data) {
                    if (data.result) {
                       
                        notify.alert(data.message, 'success', TITLE_STATUS_SUCCESS);
                    } else {
                        notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                    }
                }, complete: function () {
                    //spinner.close();
                    //window.location.href = '/Course/ListResultHasInsert';
                }
            });
        }
        function getData() {
            var $root = $('#createform');
            var OrientationModify = [];
            var $details = $root.find('#Table_Orientation tr.my-class');
            $.each($details,
                function (i, o) {
                    var $this = $(this);
                    var details = {                    
                        EmployeeID: $this.find('#EmployeeID').val(),
                        JobTitleID: $this.find('#JobTitleID').val(),
                        FuturePositionID: $this.find('#FuturePositionID').val(),
                        SelectedValue: $this.find('#NEmployee').prop("checked"),
                    }
                   OrientationModify.push(details);
                });
            return OrientationModify;
        }

        function Review() {
            var input = $("input[name='id2[]']:checked");
            var parentTr = $(input).closest('tr');
            parentTr.each(function (i, v) {
                var count = 1;
                $(v).find("td").each(function (j, vl) {
                    
                    $(vl).addClass('index_'+count);
                    count++;
                });
                
            });
            parentTr.find(".index_4").remove();
            parentTr.find('.index_6').remove();
            parentTr.find(".index_5").removeClass().addClass("index_4");

             var a = document.createElement('a');
            a.innerHTML = $("#editorJob option:selected").text();
            var span = document.createElement('span');
            span.setAttribute("data-value", $("#editorJob option:selected").val());

            span.setAttribute("data-idJob", $("#editorJob option:selected").val());
            span.setAttribute("class","expand");
            span.setAttribute("style", "cursor: pointer");
            span.append(a);
            var td = document.createElement('td');
            td.classList.add("index_5");          
            td.append(span);
            var input = document.createElement('input');
            input.setAttribute("type", "hidden");
            input.setAttribute("name", "FuturePositionID");
            input.setAttribute("id", "FuturePositionID");
            input.setAttribute("value", $("#editorJob option:selected").val());
            td.append(input);
            parentTr.append(td);
            var td1 = document.createElement('td');
            td1.classList.add("text-center");
            var checkbox = document.createElement('input');
            checkbox.setAttribute("type", "checkbox");
            checkbox.setAttribute("name", "NEmployee[]");
            checkbox.setAttribute("id", "NEmployee");
            td1.append(checkbox);
            parentTr.append(td1);
            parentTr.each(function (i, v) {
                sTable.row.add(v).draw();
            });
            string_value = "";
             $('#Table_Orientation .EmployeeID').each(function (i, v) {
                string_value = string_value + "," + $(v).val();
             }); 
            $('#Table_Orientation tbody tr').addClass('my-class');
            $("#valuecurrent").val(string_value);
            sTable_tab2.ajax.reload();
        }
        function Clear() {
            var input;
            var parentTr;
            input = $("input[name='NEmployee[]']:checked");
            parentTr = $(input).closest('tr');
            parentTr.each(function (i, j) {
                sTable.$('tr.row_selected');//.removeClass('row_selected');
                $(j).addClass('row_selected');
            });
            sTable.rows('.row_selected').remove()
            parentTr.remove();          
            sTable.draw();
            string_value = "";
            $('#Table_Orientation .EmployeeID').each(function (i, v) {
                string_value = string_value + "," + $(v).val();
            }); 
            $("#valuecurrent").val(string_value);
            sTable_tab2.ajax.reload();
        }

       
        //function fnGetSelected( oTableLocal )
        //{
        //    return sTable.$('tr.row_selected');
        //}
    </script>
}
