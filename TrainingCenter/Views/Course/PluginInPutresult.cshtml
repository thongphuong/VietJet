@using TMS.Core.Utils
@using TMS.Core.App_GlobalResources
@using TMS.Core.ViewModels.UserModels
@model TMS.Core.ViewModels.Courses.CourseResultViewModel
@{
    ViewBag.Title = "PluginInPutresult";
    Layout = "~/Views/Shared/_Layout_LMS.cshtml";
    var data = (UserModel)HttpContext.Current.Session["UserA"];
    var checkStatusBlock = ViewBag.CheckStatusBlock;
}
@section breadcrumb{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"><i class="fa fa-graduation-cap"></i>  @Resource.lblCourseManagement - @Resource.lblInputResult</h1>
            <ol class="breadcrumb">
             
            </ol>
        </div>
    </div>
}

<style type="text/css">
    .highlight {
        color: red;
    }

        .highlight input {
            color: red;
        }
</style>

<div class="panel">
    <div class="tab-content">
        <div class="tab-pane fade  active in" id="home">
            @using (Html.BeginForm("AjaxHandlerListResult", "Course", FormMethod.Post, new { id = "frmFilter" }))
            {
                <div class="row col-md-12 hidden">
                    <div class="panel  list-panel" id="list-panel">
                        <div class="panel-body">
                            <div class="row col-md-12">
                                <div class="row" style="margin-top: 10px;">
                                    <div class="col-md-2">
                                        <b>@Resource.lblCourseName</b>
                                    </div>
                                    @*<input id="CourseId" type="hidden" value="@Model.CourseId" />
                                        <input id="CourseIddetails" type="hidden" value="@Model.CourseDetailId" />*@

                                    <div class="col-md-10">
                                        <select class="form-control selectpicker frmFilter" id="CourseList" name="CourseList" onchange=" OnChangeCourseList(this.value) " data-placeholder="-- @Resource.lblCourseList --">
                                            <option></option>
                                            @foreach (var variable in Model.Courses)
                                            {
                                                if (variable.Key == Model.CourseId)
                                                {
                                                    <option selected="selected" value="@variable.Key">@variable.Value</option>
                                                }
                                                else
                                                {
                                                    <option value="@variable.Key">@variable.Value</option>
                                                }
                                            }
                                        </select>
                                    </div>

                                </div>
                                <div class="row" style="margin-top: 10px;">
                                    <div class="col-md-2">
                                        <b>@Resource.lblSubjectName</b>
                                    </div>
                                    <div class="col-md-10">
                                        <select class='form-control selectpicker frmFilter' id="ddl_subject" name="ddl_subject" data-placeholder="--@Resource.lblSubjectList--">
                                            @if (Model.CourseDetailsByCourse != null)
                                            {
                                                foreach (var item in Model.CourseDetailsByCourse)
                                                {
                                                    if (item.Key == Model.CourseDetailId)
                                                    {
                                                        <option selected="selected" value="@item.Key">@item.Value</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.Key">@item.Value</option>
                                                    }
                                                }
                                            }
                                            <option></option>
                                        </select>
                                        <input type="hidden" name="input" id="input" class="frmFilter" value="1" />
                                    </div>
                                </div>
                                <div class="row" style="margin-top: 10px;">
                                    <div class="col-md-2">
                                        <b>@Resource.lblFrom</b>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" id="DateFrom" name="DateFrom" class="form-control datepicker required frmFilter">
                                    </div>
                                    <div class="col-md-2">
                                        <b>@Resource.lblTo</b>
                                    </div>
                                    <div class="col-md-2">
                                        <input type="text" id="DateTo" name="DateTo" class="form-control datepicker required frmFilter">
                                    </div>
                                    <div class="col-md-2">
                                        <button type="submit" class="btn btn-primary pull-right" id="btFilter">
                                            <i class="fa fa-search"></i> @Resource.lblSearch
                                        </button>
                                    </div>
                                    <div class="col-md-2">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" name="CourseId" class="frmFilter" value="@Model.CourseId" />
                <input type="hidden" name="CourseDetailId" class="frmFilter" value="@Model.CourseDetailId" />
                <input type="hidden" name="SubjectDetailId" class="frmFilter" value="@Model.SubjectDetailId" />
            }
            @if (User.IsInRole("/Course/ListResultHasInsert"))
            {
                using (Html.BeginForm("InsertResult", "Course", FormMethod.Post, new { id = "InsertResult", onsubmit = "return false;" }))
                {
                    <div class="row col-md-12">
                        <div class="panel">
                            <div class="panel-heading">
                                <h1 class="panel-title list-panel-title"> @(Model.SubjectName)</h1>
                            </div>
                            <div class="panel-body">
                                <div class="col-md-12">
                                    <div class="row" style="margin-top: 10px;">
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblCourseName:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.CourseName)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblCourseCode:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.CourseCode)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblSubjectName:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.SubjectName)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblSubjectCode:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.SubjectCode)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblDuration:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.Duration)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblDate:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.DateFromTo)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblRoom :</b></label>
                                                <div class="col-md-8">
                                                    @(Model.RoomName)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblTypeLearning:</b></label>
                                                <div class="col-md-8">
                                                    @Html.Raw(Model.TypeLearning)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">

                                            @if (data.ConfigSite.Contains(UtilConstants.KEY_HANNAH))
                                            {
                                                <div class="col-md-6">
                                                    <label class="col-md-4"><b>@Resource.lblHANNAH:</b></label>
                                                    <div class="col-md-8">
                                                        @Html.Raw(Model.Hannah)
                                                    </div>
                                                </div>
                                            }
                                            @if (data.ConfigSite.Contains(UtilConstants.KEY_MENTOR))
                                            {
                                                <div class="col-md-6">
                                                    <label class="col-md-4"><b>@Resource.lblMentor:</b></label>
                                                    <div class="col-md-8">
                                                        @Html.Raw(Model.Mentor)
                                                    </div>
                                                </div>
                                            }
                                        </div>

                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblInstructor:</b></label>
                                                <div class="col-md-8">
                                                    @Html.Raw(Model.Instructors)
                                                </div>
                                            </div>
                                            @*<div class="col-md-6">
                                                    @*<label class="col-md-4"><b>@Resource.lblMaxGrade:</b></label>
                                                    <div class="col-md-8">
                                                        @(Model.MaxGrade)
                                                    </div>
                                                </div>*@
                                        </div>
                                    </div>
                                    <br />
                                    <hr />
                                    <br />
                                </div>
                                <div class="table-responsive">
                                    <table id="Trainee" class="table table-striped table-bordered dataTable no-footer" style="width: 100%">
                                        <thead>
                                            <tr role="row">
                                                <th>@Resource.lblStt</th>
                                                <th>@Messege.EID</th>
                                                <th>@Resource.lblName</th>
                                                <th>@Resource.lblDepartment</th>
                                                <th>@Resource.lblLearningTime</th>
                                                <th style="width: 10%">@Resource.lblFirstCheck</th>
                                                <th style="width: 10%">@Resource.lblReCheck</th>
                                                @*@if (Model.Ingredients != null)
                                                    {
                                                        foreach (var item in Model.Ingredients)
                                                        {
                                                            <th>@item.Value</th>
                                                        }
                                                    }*@
                                                <th>@Resource.lblRemark</th>
                                                <th>@Resource.lblCHECKFAIL</th>
                                        </thead>
                                        <tbody>
                                            @{var count = 1;}
                                            @if (Model.Members != null && Model.Members.Any())
                                            {
                                                foreach (var item in Model.Members)
                                                {
                                                    var ingredient = "";
                                                    <tr class="@(item.Type == true ? "highlight" : "")">
                                                        <td>@count</td>
                                                        <td>
                                                            @item.Code
                                                            <input type="hidden" name="TraineeCode" id="TraineeCode" value="@item.Code" />
                                                            <input type="hidden" class="form-control" name="MemberId" value="@item.Id">
                                                            <input type="hidden" class="form-control" name="Course_Details_Id" value="@Model.CourseDetailId">
                                                            <input type="hidden" name="TraineeId" id="TraineeId" value="@item.TraineeId" />
                                                        </td>
                                                        <td>
                                                            @item.Name
                                                            <input type="hidden" name="TraineeName" id="TraineeName" value="@item.Name" />
                                                        </td>
                                                        <td>
                                                            @item.DepartmentName
                                                            <input type="hidden" name="DepartmentCode" id="DepartmentCode" value="@item.DepartmentCode" />
                                                        </td>
                                                        <td>@item.LearningTime</td>
                                                        <td>
                                                            @if (Model.MarkType == (int)UtilConstants.MarkTypes.Auto)
                                                            {
                                                                if (!string.IsNullOrEmpty(item.Score) || !string.IsNullOrEmpty(item.Result))
                                                                {
                                                                    <div style="pointer-events: none;opacity: 0.4;">
                                                                        <input type="number" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="First_Check_Score" id="First_Check_Score" value="@item.Score">
                                                                        <select class="form-control" name="First_Check_Result" id="First_Check_Result" data-placeholder="-- Grade --">
                                                                            <option value="@item.Result" selected="">@(item.Result == "P" ? "Pass" : "Fail")</option>
                                                                        </select>
                                                                    </div>
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                }
                                                                else
                                                                {

                                                                    <input type="hidden" class="form-control" name="First_Check_Score" value="-1">
                                                                    <input type="hidden" class="form-control" name="First_Check_Result" value="-1">
                                                                }
                                                            }
                                                            else
                                                            {

                                                                if (Model.IsCalculate == true)
                                                                {
                                                                    <input type="number" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="First_Check_Score" id="First_Check_Score" value="@item.Score">
                                                                    <input type="hidden" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="First_Check_Result" id="First_Check_Result" value="-1">
                                                                }
                                                                else
                                                                {
                                                                    <input type="hidden" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="First_Check_Score" id="First_Check_Score" value="-1">
                                                                    <select class="form-control" name="First_Check_Result" id="First_Check_Result" data-placeholder="-- Grade --">
                                                                        <option value="-1">-- Grade --</option>
                                                                        <option value="P" @(item.Result == "P" ? "selected" : "")>Pass</option>
                                                                        <option value="F" @(item.Result == "F" ? "selected" : "")>Fail</option>
                                                                    </select>
                                                                }

                                                                <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                            }


                                                        </td>
                                                        <td>
                                                            @if (Model.MarkType == (int)UtilConstants.MarkTypes.Auto)
                                                            {
                                                                if (!string.IsNullOrEmpty(item.Score_Re) || !string.IsNullOrEmpty(item.Result_Re))
                                                                {

                                                                    <div style="pointer-events: none;opacity: 0.4;">
                                                                        <input type="number" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="Re_Check_Score" id="Re_Check_Score" value="@item.Score_Re">
                                                                        <select class="form-control" name="Re_Check_Result" id="Re_Check_Result" data-placeholder="-- Grade --">
                                                                            <option value="@item.Result_Re" selected="">@(item.Result_Re == "P" ? "Pass" : "Fail")</option>
                                                                        </select>
                                                                    </div>
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                }
                                                                else
                                                                {

                                                                    <input type="hidden" class="form-control" name="Re_Check_Score" value="-1">
                                                                    <input type="hidden" class="form-control" name="Re_Check_Result" value="-1">
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (Model.IsCalculate == true)
                                                                {
                                                                    <input type="number" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="Re_Check_Score" id="Re_Check_Score" value="@item.Score_Re">
                                                                    <input type="hidden" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="Re_Check_Result" id="Re_Check_Result" value="-1">
                                                                }
                                                                else
                                                                {
                                                                    <input type="hidden" data-staffid="@item.Code" style="width: 65px;" class="form-control" name="Re_Check_Score" id="Re_Check_Score" value="-1">
                                                                    <select class="form-control" name="Re_Check_Result" id="Re_Check_Result" data-placeholder="-- Grade --">
                                                                        <option value="-1">-- Grade --</option>
                                                                        <option value="P" @(item.Result_Re == "P" ? "selected" : "")>Pass</option>
                                                                        <option value="F" @(item.Result_Re == "F" ? "selected" : "")>Fail</option>
                                                                    </select>
                                                                }

                                                                <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                            }
                                                        </td>
                                                        @*@if (Model.Ingredients.Any())
                                                            {
                                                                var temp = "";
                                                                foreach (var item2 in Model.Ingredients)
                                                                {
                                                                    <td>
                                                                        @{
                                                                            const string null_ = "null_";
                                                                            if (item.ResultIngredientses != null)
                                                                            {

                                                                                ingredient = "";
                                                                                foreach (var b in item.ResultIngredientses)
                                                                                {
                                                                                    if (b.CourseDetailIngredient_Id == item2.Key)
                                                                                    {
                                                                                        if (!string.IsNullOrEmpty(b.Score) && b.Score != "-1")
                                                                                        {
                                                                                            temp = b.Score;
                                                                                            ingredient += b.IngredientCode + "!" + b.CourseDetailIngredient_Id + "!" + b.CourseResult_Id + "!" + b.Score + "_";
                                                                                            break;
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                ingredient += null_;
                                                                            }
                                                                        }
                                                                        @temp
                                                                    </td>
                                                                }

                                                            }*@

                                                        <td>

                                                            <input type="hidden"
                                                                   name="TraineeId_@(item.TraineeId)_Result_@((item.Result != null && item.Result != "-1") ? item.Result : "-1")_@(ingredient)"
                                                                   id="TraineeId_@(item.TraineeId)_Result_@((item.Result != null && item.Result != "-1") ? item.Result : "-1")_@(ingredient)" value="@item.Id" />

                                                            <input type="hidden" id="CountIngre" name="CountIngre" class="frmFilter" value="@(item.ResultIngredientses != null ? item.ResultIngredientses.Count() : 0)" />
                                                            <textarea name="txt_Remark" id="txt_Remark">@item.Remark</textarea>
                                                        </td>
                                                        <td>@Html.Raw(item.CheckFail)</td>

                                                    </tr>
                                                    count++;
                                                }
                                            }
                                            else
                                            {
                                                <tr><td valign="top" colspan="@(8 + count)" class="dataTables_empty">No data available in table</td></tr>
                                            }
                                        </tbody>
                                        <tbody role="alert" aria-live="polite" aria-relevant="all"></tbody>
                                    </table>
                                </div>
                                <div class="row" id="btnRequest">
                                    <div class="action-form text-right">
                                        @if (Model.ProcessStep)
                                        {
                                            if (!Model.IsApproved)
                                            {
                                                <label for="submit" class="btn btn-primary"><i class="fas fa-save"></i>&nbsp;@Resource.lblSave</label>
                                                <input type="button" class="btn btn-primary hidden" id="submit" onclick="callsave(this)" value="@Resource.lblSave" />
                                            }
                                        }
                                        else
                                        {
                                            <label for="submit" class="btn btn-primary"><i class="fas fa-save"></i>&nbsp;@Resource.lblSave</label>
                                            <input type="button" class="btn btn-primary hidden" id="submit" onclick="callsave(this)" value="@Resource.lblSave" />
                                        }


                                        <a onclick="goBack()" class="btn btn-default"><i class="fas fa-sign-out-alt" aria-hidden="true"></i> @Resource.lblBack</a>
                                    </div>
                                </div>
                                <input type="hidden" id="fCourseId" name="fCourseId" class="frmFilter" value="@Model.CourseId" />
                                <input type="hidden" id="fIsCalculate" name="fIsCalculate" class="frmFilter" value="@(Model.IsCalculate ? (int) UtilConstants.BoolEnum.Yes : (int) UtilConstants.BoolEnum.No  )" />
                                <input type="hidden" id="fsubmitType" name="fsubmitType" class="frmFilter" value="@(Model.ProcessStep ? (int) UtilConstants.EStatus.Pending : (int) UtilConstants.EStatus.Approve)" />
                                <input type="hidden" id="ftype" name="ftype" class="frmFilter" value="@(UtilConstants.ApproveType.SubjectResult)" />

                                <input type="hidden" id="fCourseDetailId" name="fCourseDetailId" class="frmFilter" value="@Model.CourseDetailId" />
                                <input type="hidden" id="fSubjectDetailId" name="fSubjectDetailId" class="frmFilter" value="@Model.SubjectDetailId" />
                                <input type="hidden" id="TypeLearningId" name="TypeLearningId" class="frmFilter" value="@Model.TypeLearningId" />
                                <input type="hidden" id="MaxGrade" name="MaxGrade" class="frmFilter" value="@Model.MaxGrade" />
                                @*<input type="hidden" name="IsFinal" value="@ViewBag.IsFinal" />*@
                            </div>

                        </div>
                    </div>

                }
            }


        </div>

    </div>


</div>





<!-- Modal -->
<div class="modal fade" id="myModalSave" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div class="panel-heading panel-title list-panel-title">
                    <h5 class="modal-title" id="modal-header"><i class="fas fa-save" aria-hidden="true"></i> @Resource.lblSave</h5>
                </div>
            </div>
            <div class="modal-body">
                <p>@Resource.lblAreYouSure ?</p>
            </div>
            <div class="modal-footer" id="Modal_FooterSave">
            </div>
        </div>

    </div>
</div>

@section Scripts{

    <script type="text/javascript">
        var $dataTable;
        $(document).ready(function() {

            $("#frmFilter").submit(function(e) {
                //$dataTable.draw();
                e.preventDefault();
            });
            var customRow = [
                {
                    "targets": [],
                    "visible": false,
                    "pageLength": 9000000
                },
                { "targets": 7, "sortable": false }
            ];
            //$dataTable = initDataTableMaxPageLength("#Trainee", "/Course/AjaxHandlerListResult", customRow);

            var idCourse = $("#CourseId").val();
            $('#CourseList').val(idCourse);

            formatDatetimepicker('#DateTo', 'vi');
            formatDatetimepicker('#DateFrom', 'vi');

        });
        $(".line_310").addClass("active");

        function OnChangeCourseList(val) {
            $.ajax({
                cache: false,
                type: "POST",
                url: "/Course/ChangeCourseReturnSubject",
                dataType: "json",
                data: { idCourse: val },
                success: function(result) {
                    $('#ddl_subject').empty();
                    $('#ddl_subject').prop('selectedIndex', 0);
                    if (result.value_null === 0) {
                        $('#ddl_subject').append(result.value_option);
                        $('#ddl_subject').selectpicker('refresh');
                    } else {
                        $('#ddl_subject').append("<option></option>");
                    }
                }
            });
        }

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 47 || charCode > 57)) {
                return false;
            }
            return true;
        }

        function RemarkComment(id,e) {
            var tr = $(e).parent().parent();

            spinner.open();
            $.ajax({
                type: 'GET',
                url: "/Course/RemarkComment",
                data: { id: id },
                success: function(data) {
                    var $modal = $(data).modal({ backdrop: 'static', show: true });
                    $modal.on('submit', 'form', function(e) {
                        proccessFormInModal($modal,tr);
                        e.preventDefault();
                    });
                    $modal.on('hidden.bs.modal', function() { $(this).remove(); });
                },
                error: function(data) {
                    response.alert(data);
                },
                complete: function() {
                    spinner.close();
                }
            });
        }

        function proccessFormInModal($modal,tr) {

            var $this = $modal.find('form');
            var formData = $this.serialize();
            $.ajax({
                url: $this.attr('action'),
                data: formData,
                type: 'POST',
                success: function(data) {
                    if (data.result) {
                        if (data.data) {
                            $(tr).addClass('highlight');
                            $(tr).find('svg').addClass('highlight');
                        } else {
                            $(tr).removeClass('highlight');
                            $(tr).find('svg').removeClass('highlight');
                        }
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                        $modal.on('hidden.bs.modal', function() {
                            $(this).remove();
                            // $dataTable.draw();
                        });
                        $modal.modal('hide');
                    } else {
                        notify.alert(data.message, 'Warning', TITLE_STATUS_DANGER);
                    }
                },
                complete: function() {
                    $(this).remove();
                    spinner.close();
                }
            });
        }

        $("#btnModal").click(function() {
            $("#myModal").modal();
        });

        function calldelete(id) {
            var values = {};

            $.each($("#InsertResult").serializeArray(), function(i, field) {
                values[field.name] = field.value;
            });

            var getValue = function(valueName) {
                return values[valueName];
            };

            var first = getValue("FirstName");
            var last = getValue("LastName");

            $("#results").append(first + " & ");
            $("#results").append(last);
            notify.confirm("@Messege.DELETE_TRAINEE", "Confirm", TITLE_STATUS_DANGER, submit1, id);

        }


        function CalculatedClick(control) {
            var $this = $(control);
            var value = $this.val();
            var intValue = parseInt(value);
            var gradeWrapper = $this.closest('tr').find('.Remark');
            switch (intValue) {
                case @((int) UtilConstants.Grade.Fail):
                    gradeWrapper.val("Fail");
                    break;
                case @((int) UtilConstants.Grade.Pass):
                    gradeWrapper.val("Pass");
                    break;
            };
        }




        function callsave(selector) {

            $("#myModalSave").modal("show");
            $("#Modal_FooterSave").empty();
            $("#Modal_FooterSave").append("<input type='button' class='btn btn-danger'  value='@Resource.lblSave' onclick='actionSave(this)' /><button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>");
        }

        function actionSave(selector) {
            spinner.open();
            var form = $("#InsertResult").serialize();
            $.ajax({
                type: 'POST',
                url: "/Course/InsertResult",
                datatype: 'json',
                data: form,
                success: function(data) {
                    if (data.result) {
                        //$dataTable.draw();
                        $("#myModal").modal("hide");
                        $("#myModalSave").modal("hide");
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                    } else {
                        notify.alert(data.message, 'ERROR', TITLE_STATUS_DANGER);
                    }
                },
                complete: function() {
                    spinner.close();
                }
            });
        }



        $(".line_6").addClass("active");
    </script>
}
