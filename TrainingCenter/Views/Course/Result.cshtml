@using TMS.Core.Utils
@using TMS.Core.App_GlobalResources
@using TMS.Core.ViewModels.UserModels
@model TMS.Core.ViewModels.Courses.CourseResultViewModel
@{
    ViewBag.Title = "Result";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var data = (UserModel)HttpContext.Current.Session["UserA"];
    var checkStatusBlock = ViewBag.CheckStatusBlock;
}
@section breadcrumb{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header"><i class="fa fa-graduation-cap"></i>  @Resource.lblCourseManagement - @Resource.lblInputResult</h1>
            <ol class="breadcrumb">
                <li><a href="/">@Resource.lblHome</a></li>
                <li>@Resource.lblCourseManagement</li>
                <li class="active">@Resource.lblInputResult</li>
            </ol>
        </div>
    </div>
}

<style type="text/css">
    .highlight {
        color: red;
    }

        .highlight input {
            color: red;
        }
</style>

<div class="panel">
    <div class="tab-content">
        <div class="tab-pane fade  active in" id="home">
            <input type="hidden" id="ddl_subject_" name="ddl_subject_" value="@Model.CourseDetailId" />
            @if (User.IsInRole("/Course/ListResultHasInsert"))
            {
                using (Html.BeginForm("ExportSubjectResult", "Report", FormMethod.Post, new { id = "InsertResult", onsubmit = "return false;" }))
                {
                    <input type="hidden" name="CourseId" class="frmFilter" value="@Model.CourseId" />
                    <input type="hidden" name="CourseDetailId" class="frmFilter" value="@Model.CourseDetailId" />
                    <input type="hidden" name="SubjectDetailId" class="frmFilter" value="@Model.SubjectDetailId" />
                    <input type="hidden" id="checkSuccessCron" name="checkSuccessCron" value="@(Model.checkSuccessCron == true ? "true" : "false" )" />
                    <div class="row col-md-12">
                        <div class="panel">
                            <div class="panel-heading">
                                <h1 class="panel-title list-panel-title">
                                    @(Model.SubjectName) &nbsp;
                                    @if (Model.MarkType == (int)UtilConstants.MarkTypes.Auto)
                                    {
                                        <a class="btn btn-success btn-xs dropdown-toggle legitRipple" title="AwaitSync" href="javascript:void(0);" data-toggle="tooltip" onclick="ClickCronReturnJson(@(Model.MarkType == (int)UtilConstants.MarkTypes.Auto ? Model.CourseDetailId : 0))"><i class="zmdi zmdi-refresh  btnIcon_orange"></i>Re-Sync</a>
                                    }

                                    <p class="btn-group pull-right" @*id="displayButtonPrint"*@>
                                        <a id="btnPrint" class="btn btn-success btn-xs dropdown-toggle legitRipple"><i class="fa fa-print" aria-hidden="true"></i> @Resource.lblPrint</a>
                                    </p>
                                    <p class="btn-group pull-right" @*id="displayButtonExport"*@>
                                        <a href="javascript:void(0)" class="btn btn-success btn-xs dropdown-toggle legitRipple" id="btnExport" onclick="document.getElementById('InsertResult').submit();"><i class="fa fa-download" aria-hidden="true"></i> @Resource.lblEXPORT</a>
                                    </p>
                                </h1>
                            </div>
                            <div class="panel-body">
                                <div class="col-md-12">
                                    <div class="row" style="margin-top: 10px;">
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblCourseName:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.CourseName)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblCourseCode:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.CourseCode)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblSubjectName:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.SubjectName)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblSubjectCode:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.SubjectCode)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblDuration:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.Duration)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblDate:</b></label>
                                                <div class="col-md-8">
                                                    @(Model.DateFromTo)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblRoom :</b></label>
                                                <div class="col-md-8">
                                                    @(Model.RoomName)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblTypeLearning:</b></label>
                                                <div class="col-md-8">
                                                    @Html.Raw(Model.TypeLearning)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12">

                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblExaminer:</b></label>
                                                <div class="col-md-8">
                                                    @Html.Raw(Model.Hannah)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblMonitor:</b></label>
                                                <div class="col-md-8">
                                                    @Html.Raw(Model.Mentor)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-12">
                                            <div class="col-md-6">
                                                <label class="col-md-4"><b>@Resource.lblInstructor:</b></label>
                                                <div class="col-md-8">
                                                    @Html.Raw(Model.Instructors)
                                                </div>
                                            </div>
                                            @*<div class="col-md-6">
                                                    @*<label class="col-md-4"><b>@Resource.lblMaxGrade:</b></label>
                                                    <div class="col-md-8">
                                                        @(Model.MaxGrade)
                                                    </div>
                                                </div>*@
                                        </div>
                                    </div>
                                    <br />
                                    <hr />
                                    <br />
                                </div>
                                <div class="table-responsive">
                                    <table id="Trainee" class="table table-striped table-bordered dataTable no-footer" style="width: 100%">
                                        <thead>
                                            <tr role="row">
                                                <th>@Resource.lblStt</th>
                                                <th>@Messege.EID</th>
                                                <th>@Resource.lblName</th>
                                                <th>@Resource.lblDepartment</th>
                                                <th>@Resource.lblLearningTime</th>
                                                <th style="width: 10%">@Resource.lblFirstCheck</th>
                                                <th style="width: 10%">@Resource.lblReCheck</th>
                                                @*@if (Model.Ingredients != null)
                                                    {
                                                        foreach (var item in Model.Ingredients)
                                                        {
                                                            <th>@item.Value</th>
                                                        }
                                                    }*@
                                                <th>@Resource.lblRemark</th>
                                                <th>@Resource.lblCHECKFAIL</th>
                                                <th>
                                                    <input type="checkbox" onclick="CheckAll(this)" />
                                                </th>
                                        </thead>
                                        <tbody>
                                            @{var count = 1;}
                                            @if (Model.Members != null && Model.Members.Any())
                                            {
                                                foreach (var item in Model.Members)
                                                {
                                                    var ingredient = "";
                                                    <tr class="@(item.Type == true ? "highlight" : "")">
                                                        <td>@count</td>
                                                        <td>
                                                            @item.Code
                                                            <input type="hidden" name="TraineeCode" id="TraineeCode" value="@item.Code" />
                                                            <input type="hidden" class="form-control" name="MemberId" value="@item.Id">
                                                            <input type="hidden" class="form-control" name="Course_Details_Id" value="@Model.CourseDetailId">
                                                            <input type="hidden" name="TraineeId" id="TraineeId" value="@item.TraineeId" />
                                                        </td>
                                                        <td>
                                                            @item.Name
                                                            <input type="hidden" name="TraineeName" id="TraineeName" value="@item.Name" />
                                                        </td>
                                                        <td>
                                                            @item.DepartmentName
                                                            <input type="hidden" name="DepartmentCode" id="DepartmentCode" value="@item.DepartmentCode" />
                                                        </td>
                                                        <td>@item.LearningTime</td>
                                                        <td>
                                                            @if (Model.MarkType == (int)UtilConstants.MarkTypes.Auto)
                                                            {
                                                                if (!string.IsNullOrEmpty(item.Score_temp) || !string.IsNullOrEmpty(item.Result_temp))
                                                                {
                                                                    <div style="pointer-events: none;opacity: 0.4;">
                                                                        <input type="number" data-staffid="@item.Code" style="width:100%;" class="form-control" name="First_Check_Score" id="First_Check_Score" value="@item.Score_temp">
                                                                        <select class="form-control" name="First_Check_Result" id="First_Check_Result" data-placeholder="-- Grade --">
                                                                            <option value="@item.Result_temp" selected="">@(item.Result_temp == "P" ? "Pass" : "Fail")</option>
                                                                        </select>
                                                                    </div>
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                }
                                                                else
                                                                {

                                                                    <input type="hidden" class="form-control" name="First_Check_Score" value="-1">
                                                                    <input type="hidden" class="form-control" name="First_Check_Result" value="-1">
                                                                }
                                                            }
                                                            else
                                                            {

                                                                if (Model.IsCalculate == true)
                                                                {
                                                                    <input type="number" data-staffid="@item.Code" style="width:100%;" class="form-control" name="First_Check_Score" id="First_Check_Score" value="@item.Score">
                                                                    <input type="hidden" data-staffid="@item.Code" style="width:100%;" class="form-control" name="First_Check_Result" id="First_Check_Result" value="-1">
                                                                }
                                                                else
                                                                {
                                                                    <input type="hidden" data-staffid="@item.Code" style="width:100%;" class="form-control " name="First_Check_Score" id="First_Check_Score" value="-1">
                                                                    <select class="form-control default" name="First_Check_Result" id="First_Check_Result" data-placeholder="-- Grade --">
                                                                        @*<option value="-1"></option>*@
                                                                        <option value="P" @(item.Result == "P" ? "selected" : "")>Pass</option>
                                                                        <option value="F" @(item.Result == "F" ? "selected" : "")>Fail</option>
                                                                    </select>
                                                                }

                                                                <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                            }


                                                        </td>
                                                        <td>
                                                            @if (Model.MarkType == (int)UtilConstants.MarkTypes.Auto)
                                                            {
                                                                if (!string.IsNullOrEmpty(item.Score_Re_temp) || !string.IsNullOrEmpty(item.Result_Re_temp))
                                                                {

                                                                    <div style="pointer-events: none;opacity: 0.4;">
                                                                        <input type="number" data-staffid="@item.Code" style="width:100%;" class="form-control" name="Re_Check_Score" id="Re_Check_Score" value="@item.Score_Re_temp">
                                                                        <select class="form-control" name="Re_Check_Result" id="Re_Check_Result" data-placeholder="-- Grade --">
                                                                            <option value="@item.Result_Re_temp" selected="">@(item.Result_Re_temp == "P" ? "Pass" : "Fail")</option>
                                                                        </select>
                                                                    </div>
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                    <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                }
                                                                else
                                                                {

                                                                    <input type="hidden" class="form-control" name="Re_Check_Score" value="-1">
                                                                    <input type="hidden" class="form-control" name="Re_Check_Result" value="-1">
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (Model.IsCalculate == true)
                                                                {
                                                                    <input type="number" data-staffid="@item.Code" style="width:100%;" class="form-control" name="Re_Check_Score" id="Re_Check_Score" value="@item.Score_Re">
                                                                    <input type="hidden" data-staffid="@item.Code" style="width:100%;" class="form-control" name="Re_Check_Result" id="Re_Check_Result" value="-1">
                                                                }
                                                                else
                                                                {
                                                                    <input type="hidden" data-staffid="@item.Code" style="width:100%;" class="form-control " name="Re_Check_Score" id="Re_Check_Score" value="-1">
                                                                    <select class="form-control default" name="Re_Check_Result" id="Re_Check_Result" data-placeholder="-- Grade --">
                                                                        <option value="-1"></option>
                                                                        <option value="P" @(item.Result_Re == "P" ? "selected" : "")>Pass</option>
                                                                        <option value="F" @(item.Result_Re == "F" ? "selected" : "")>Fail</option>
                                                                    </select>
                                                                }

                                                                <input type="hidden" class="form-control" name="Course_Result_Id" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                                <input type="hidden" class="form-control" name="Course_Result_Id_Re" value="@(item.Course_Result_Id.HasValue ? item.Course_Result_Id : -1 )">
                                                            }
                                                        </td>

                                                        <td>

                                                            <input type="hidden"
                                                                   name="TraineeId_@(item.TraineeId)_Result_@((item.Result != null && item.Result != "-1") ? item.Result : "-1")_@(ingredient)"
                                                                   id="TraineeId_@(item.TraineeId)_Result_@((item.Result != null && item.Result != "-1") ? item.Result : "-1")_@(ingredient)" value="@item.Id" />

                                                            @*<input type="hidden" id="CountIngre" name="CountIngre" class="frmFilter" value="@(item.ResultIngredientses != null ? item.ResultIngredientses.Count() : 0)" />*@
                                                            @if (Model.MarkType == (int)UtilConstants.MarkTypes.Auto)
                                                            {
                                                                if (!string.IsNullOrEmpty(item.Remark))
                                                                {
                                                                    if (!string.IsNullOrEmpty(item.Score_Re) || !string.IsNullOrEmpty(item.Score_Re_temp))
                                                                    {
                                                                        <textarea name="txt_Remark" id="txt_Remark">@(item.Remark.Contains("Second try:") ? item.Remark : "Second try: " + item.RealReResult+ ". " + item.Remark)</textarea>
                                                                    }
                                                                    else
                                                                    {
                                                                        <textarea name="txt_Remark" id="txt_Remark">@item.Remark</textarea>
                                                                    }

                                                                }
                                                                else
                                                                {
                                                                    if (!string.IsNullOrEmpty(item.Score_Re) || !string.IsNullOrEmpty(item.Score_Re_temp))
                                                                    {
                                                                        <textarea name="txt_Remark" id="txt_Remark">Second try: @item.RealReResult</textarea>
                                                                    }
                                                                    else
                                                                    {
                                                                        <textarea name="txt_Remark" id="txt_Remark">@item.Remark</textarea>
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <textarea name="txt_Remark" id="txt_Remark">@item.Remark</textarea>
                                                            }


                                                        </td>
                                                        <td>
                                                            @Html.Raw(item.CheckFail)
                                                        </td>
                                                        <td class="text-center">
                                                            @Html.Raw(item.CheckBox)
                                                        </td>
                                                    </tr>
                                                    count++;
                                                }
                                            }
                                            else
                                            {
                                                <tr><td valign="top" colspan="@(9 + count)" class="dataTables_empty">No data available in table</td></tr>
                                            }
                                        </tbody>
                                        <tbody role="alert" aria-live="polite" aria-relevant="all"></tbody>
                                    </table>
                                </div>
                                <div class="row" id="btnRequest">
                                    <div class="action-form text-right">
                                        @if (Model.ProcessStep)
                                        {
                                            if (!Model.IsApproved)
                                            {
                                                <label for="submit2" class="btn btn-primary"><i class="fas fa-save"></i>&nbsp;@Resource.lblSave</label>
                                                <input type="button" class="btn btn-primary hidden" id="submit2" onclick="callsave(this)" value="@Resource.lblSave" />
                                            }
                                        }
                                        else
                                        {
                                            <label for="submit2" class="btn btn-primary"><i class="fas fa-save"></i>&nbsp;@Resource.lblSave</label>
                                            <input type="button" class="btn btn-primary hidden" id="submit2" onclick="callsave(this)" value="@Resource.lblSave" />
                                        }


                                        <a onclick="goBack_new()" class="btn btn-default"><i class="fas fa-sign-out-alt" aria-hidden="true"></i> @Resource.lblBack</a>
                                    </div>
                                </div>
                                <input type="hidden" id="fCourseId" name="fCourseId" class="frmFilter" value="@Model.CourseId" />
                                <input type="hidden" id="fIsCalculate" name="fIsCalculate" class="frmFilter" value="@(Model.IsCalculate ? (int) UtilConstants.BoolEnum.Yes : (int) UtilConstants.BoolEnum.No  )" />
                                <input type="hidden" id="fsubmitType" name="fsubmitType" class="frmFilter" value="@(Model.ProcessStep ? (int) UtilConstants.EStatus.Pending : (int) UtilConstants.EStatus.Approve)" />
                                <input type="hidden" id="ftype" name="ftype" class="frmFilter" value="@(UtilConstants.ApproveType.SubjectResult)" />

                                <input type="hidden" id="fCourseDetailId" name="fCourseDetailId" class="frmFilter" value="@Model.CourseDetailId" />
                                <input type="hidden" id="fSubjectDetailId" name="fSubjectDetailId" class="frmFilter" value="@Model.SubjectDetailId" />
                                <input type="hidden" id="TypeLearningId" name="TypeLearningId" class="frmFilter" value="@Model.TypeLearningId" />
                                <input type="hidden" id="MaxGrade" name="MaxGrade" class="frmFilter" value="@Model.MaxGrade" />
                                <input type="hidden" id="ddl_subject" name="ddl_subject" class="frmFilter" value="@Model.CourseDetailId" />
                                @*<input type="hidden" name="IsFinal" value="@ViewBag.IsFinal" />*@
                            </div>

                        </div>
                    </div>

                }
            }


        </div>

    </div>


</div>
<div class="col-md-12" style="margin-top: 10px;display:none;">
    <div class="panel panel-default list-panel" id="list-panel">
        <div class="panel-body">
            <div id="reportpage" style="padding-top: 20px; padding-bottom: 20px; padding-left: 30px; padding-right: 15px; ">

            </div>
        </div>
    </div>
</div>




<!-- Modal -->
<div class="modal fade" id="myModalSave" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <div class="panel-heading panel-title list-panel-title">
                    <h5 class="modal-title" id="modal-header"><i class="fas fa-save" aria-hidden="true"></i> @Resource.lblSave</h5>
                </div>
            </div>
            <div class="modal-body">
                <p>@Resource.lblAreYouSure ?</p>
            </div>
            <div class="modal-footer" id="Modal_FooterSave">
            </div>
        </div>

    </div>
</div>

@section Scripts{

    <script type="text/javascript">
        var $dataTable;
         var stable
        $(document).ready(function () {
            stable = $("#Trainee").DataTable({
                 "pageLength": 9000000
            });
            //var check = $("#checkSuccessCron").val();

            //if (check == "true") {
            //    stable.draw();
            //}
            //$("#displayButtonExport").removeAttr('style');
            //$("#displayButtonExport").css('display', 'none');
            //$("#displayButtonPrint").removeAttr('style');
            //$("#displayButtonPrint").css('display', 'none');
            $("#frmFilter").submit(function(e) {
                //$dataTable.draw();
                e.preventDefault();
            });
            var customRow = [
                {
                    "targets": [],
                    "visible": false,
                    "pageLength": 9000000
                },
                { "targets": 7, "sortable": false }
            ];
            //$dataTable = initDataTableMaxPageLength("#Trainee", "/Course/AjaxHandlerListResult", customRow);

            var idCourse = $("#CourseId").val();
            $('#CourseList').val(idCourse);

            formatDatetimepicker('#DateTo', 'vi');
            formatDatetimepicker('#DateFrom', 'vi');
        });
        $(".line_310").addClass("active");
        $(".line_6").addClass("active");
         document.getElementById("btnPrint").onclick = function () {

            var subjectId = $('#ddl_subject_').val();

            if (subjectId != "") {
                active();
            } else {
                notify.alert("@Messege.VALIDATION_SUBJECT_EXPORT", "Error", TITLE_STATUS_DANGER);
            }
        }
         function active() {
            $.ajax({
                type: "GET",
                url: "/Report/SubjectResultPrint/",
                datatype: "json",
                data: {
                    id: $('#ddl_subject_').val()
                },
                success: function (data) {
                  $('#reportpage').html(data);
						var delayInMilliseconds = 1000; //1 second
						setTimeout(function() {
							printElement(document.getElementById("reportpage"));
							window.print();
						}, delayInMilliseconds);
						
                }

            });
        }
        function printElement(elem) {
            var domClone = elem.cloneNode(true);
            var $printSection = document.getElementById("printSection");

            if (!$printSection) {
                var $printSection = document.createElement("div");
                $printSection.id = "printSection";
                document.body.appendChild($printSection);
            }

            $printSection.innerHTML = "";

            $printSection.appendChild(domClone);
        }
        function OnChangeCourseList(val) {
            $.ajax({
                cache: false,
                type: "POST",
                url: "/Course/ChangeCourseReturnSubject",
                dataType: "json",
                data: { idCourse: val },
                success: function(result) {
                    $('#ddl_subject').empty();
                    $('#ddl_subject').prop('selectedIndex', 0);
                    if (result.value_null === 0) {
                        $('#ddl_subject').append(result.value_option);
                        $('#ddl_subject').selectpicker('refresh');
                    } else {
                        $('#ddl_subject').append("<option></option>");
                    }
                }
            });
        }

        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 47 || charCode > 57)) {
                return false;
            }
            return true;
        }
        var $modal1 = ""
        function RemarkComment(id, e) {
            var check = Checkif();
            if (!check) {
                var tr = $(e).parent().parent();
                spinner.open();
                $.ajax({
                    type: 'GET',
                    url: "/Course/RemarkComment",
                    data: { id: id },
                    success: function (data) {
                        var $modal = $(data).modal({ backdrop: 'static', show: true });
                        $modal.on('submit', 'form', function (e) {

                            proccessFormInModal($modal, tr);
                            e.preventDefault();
                        });
                        $modal.on('hidden.bs.modal', function () { $(this).remove(); });
                    },
                    error: function (data) {
                        response.alert(data);
                    },
                    complete: function () {
                        spinner.close();
                    }
                });

            }
            else {
                 spinner.open();
                $.ajax({
                    type: 'GET',
                    url: "/Course/RemarkCommentMany",
                    data: { listid: listid.toString() },
                    success: function (data) {
                        $modal1 = $(data).modal({ backdrop: 'static', show: true });
                    },
                    error: function (data) {
                        response.alert(data);
                    },
                    complete: function () {
                        spinner.close();
                    }
                });
            }

        }

        function proccessFormInModal($modal,tr) {

            var $this = $modal.find('form');
            var formData = $this.serialize();
            $.ajax({
                url: $this.attr('action'),
                data: formData,
                type: 'POST',
                success: function (data) {

                    if (data.result) {
                        if (data.data) {
                            $(tr).addClass('highlight');
                            $(tr).find('svg').addClass('highlight');
                        } else {
                            $(tr).removeClass('highlight');
                            $(tr).find('svg').removeClass('highlight');
                        }
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                        $modal.on('hidden.bs.modal', function() {
                            $(this).remove();
                            // $dataTable.draw();
                        });
                        $modal.modal('hide');
                    } else {
                        notify.alert(data.message, 'Warning', TITLE_STATUS_DANGER);
                    }
                },
                complete: function() {
                    $(this).remove();
                    spinner.close();
                }
            });
        }

        $("#btnModal").click(function() {
            $("#myModal").modal();
        });

        function calldelete(id) {
            var values = {};

            $.each($("#InsertResult").serializeArray(), function(i, field) {
                values[field.name] = field.value;
            });

            var getValue = function(valueName) {
                return values[valueName];
            };

            var first = getValue("FirstName");
            var last = getValue("LastName");

            $("#results").append(first + " & ");
            $("#results").append(last);
            notify.confirm("@Messege.DELETE_TRAINEE", "Confirm", TITLE_STATUS_DANGER, submit1, id);

        }


        function CalculatedClick(control) {
            var $this = $(control);
            var value = $this.val();
            var intValue = parseInt(value);
            var gradeWrapper = $this.closest('tr').find('.Remark');
            switch (intValue) {
                case @((int) UtilConstants.Grade.Fail):
                    gradeWrapper.val("Fail");
                    break;
                case @((int) UtilConstants.Grade.Pass):
                    gradeWrapper.val("Pass");
                    break;
            };
        }




        function callsave(selector) {

            $("#myModalSave").modal("show");
            $("#Modal_FooterSave").empty();
            $("#Modal_FooterSave").append("<input type='button' class='btn btn-danger'  value='@Resource.lblSave' onclick='actionSave(this)' /><button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>");
        }

        function actionSave(selector) {
            spinner.open();
            var form = $("#InsertResult").serialize();
            $.ajax({
                type: 'POST',
                url: "/Course/InsertResult",
                datatype: 'json',
                data: form,
                success: function(data) {
                    if (data.result) {
                        //$dataTable.draw();
                        $("#myModal").modal("hide");
                        $("#myModalSave").modal("hide");
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                    } else {
                        notify.alert(data.message, 'ERROR', TITLE_STATUS_DANGER);
                    }
                },
                complete: function() {
                    spinner.close();
                    //$("#displayButtonExport").removeAttr('style');
                    //$("#displayButtonExport").css('display', 'block');
                    //$("#displayButtonPrint").removeAttr('style');
                    //$("#displayButtonPrint").css('display', 'block');
                }
            });
        }

        //Checkbox
        var listid = []
        function CheckAll(input) {
            if ($(input).is(":checked")) {
                $("tbody").find($("input[type=checkbox]")).each(function () {
                    if (!$(this).is(":checked")) {
                        $(this).prop("checked", true);
                        listid.push($(this).val())
                    }
                })
            } else {
                $("tbody").find($("input[type=checkbox]")).each(function () {
                    $(this).prop("checked", false);
                    var id = $(this).val();
                        listid = listid.filter(function (value) {
                            return value != id;
                        })
                })
            }

        }

        function CheckBoxClick(input) {
            if ($(input).is(":checked")) {
                listid.push($(input).val());
            }
            else {
                listid = listid.filter(function (value) {
                    return value != $(input).val();
                })
            }

        }

        function Checkif() {
            var check = false;
            $("tbody").find($("input[type=checkbox]")).each(function () {
                if ($(this).is(":checked")) {
                    check = true;
                    return false;
                }
            })
            return check;
        }

        function actionSubmit() {
            var data = getResultData();
            $.ajax({
            type: 'POST',
            url: "/Course/RemarkCommentMany",
            datatype: 'json',
            data: { model: data },
            success: function(data) {
                if (data.result) {
                    $modal1.on('hidden.bs.modal', function () { $(this).remove(); });
                    $modal1.modal('hide');
                    $("tbody").find($("input[type=checkbox]")).each(function () {
                        $(this).prop("checked", false);
                        var id = $(this).val();
                        var tr = $(this).parent().parent();
                        if (data.data.includes(id)) {
                            $(tr).addClass('highlight');
                            $(tr).find('svg').addClass('highlight');
                        }
                        if (data.data1.includes(id)) {
                            $(tr).removeClass('highlight');
                            $(tr).find('svg').removeClass('highlight');
                        }
                    })
                    notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                } else {
                    notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                }
            },
            complete: function() {
                spinner.close();
            }
            });
        }

        function getResultData() {
            var rs = []
            $('.divitem').each(function () {
                var $root = $(this);
                var item = {
                    Id: $root.find('#Id').val(),
                    CourseDetailId: $root.find('#CourseDetailId').val(),
                    TraineeId: $root.find('#TraineeId').val(),
                    Type: true,
                    Remark: $root.find('#Remark').val(),
                }
                if ($root.find("input[type=checkbox]").is(":checked")) {
                    item.Type = true
                }
                else {
                    item.Type = false;
                }
                rs.push(item);
            });
            return rs;
        }

        function goBack_new() {
            var x = document.referrer;
            @*if (history.length > 1) {
                window.history.back();
            }
            else {
                window.location.href = x + "#CourseList="+@Model.CourseId;
            }*@
            window.location.href = "/Course/ListResultHasInsert?course="+@Model.CourseId;

        }
        function ClickCronReturnJson(idcousedetail) {
            spinner.open();
            $.ajax({
                url: '/Course/ReSync',
                type: 'POST',
                data: { idCouresDetails: idcousedetail },
                success: function (data) {
                    if (data.result) {
                        notify.alert(data.message, 'SUCCESS', TITLE_STATUS_SUCCESS);
                    } else {
                        notify.alert(data.message, 'Error', TITLE_STATUS_DANGER);
                    }

                }, complete: function () {
                     stable.state.loaded();
                    spinner.close();
                }
            });
        }
    </script>
}
