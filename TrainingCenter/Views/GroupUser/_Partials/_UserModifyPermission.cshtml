@model TMS.Core.ViewModels.Departments.GroupUserPermissionViewModel
@{
    var code = "";
    var lvl = 1;
    var currentlvl = 1;
    var root = "";
    if (Model != null && Model.DepartmentViewModels.Any())
    {
        root = Model.DepartmentViewModels.First().Ancestor.Split(new char[] { '!' })[0];
    }
    var permissionIndex = 0;
}

<style>
    .tree, .tree ul {
        margin: 0;
        padding: 0;
        list-style: none
    }
</style>
@if (Model != null)
{
    foreach (var permission in Model.DepartmentViewModels)
    {
        if (!string.IsNullOrEmpty(code))
        {
            if (permission.Ancestor.StartsWith(root + "!"))
            {
                currentlvl = permission.Ancestor.Count(a => a.Equals('!')) + 1;
                if (permission.Ancestor.StartsWith(code))
                {
                    @:<ul class="nav-second-level">
                }
                else
                {
                    @:</li>
                    if (currentlvl > lvl && lvl > 1)
                    {
                        currentlvl = lvl - 1;
                        @:</ul>
                    }
                    else
                    {
                        var closeNode = lvl - currentlvl;
                        if (closeNode == 0 && lvl > 1)
                        {
                            @:</li>
                        }
                        for (var i = 0; i < closeNode; i++)
                        {
                            @:</li></ul>
                        }
                    }
                }
            }
            else
            {
                for (var i = 1; i < lvl; i++)
                {
                    @:</li></ul>
                }
                currentlvl = 1;
                lvl = 1;
                root = permission.Ancestor.Split(new char[] { '!' })[0];
            }
        }
        code = permission.Ancestor;
        lvl = currentlvl;
        if (Model.IsMaster)
        {
            if (permission.IsActive)
            {
                <text>
                    <li class="line_@permission.Id">
                        @if (Model.GroupUserId.HasValue)
                        {
                            <label title='@permission.Code'>
                                <input type="checkbox" value="@permission.Id" name="Permissions" onchange="groupuser.grant(@permission.Id)" @(Model.GroupUserPermissionIds.Contains(permission.Id) ? "checked='checked'" : "") />
                            </label>
                        }
                        else
                        {
                            <label title="@permission.Code">
                                <input type="checkbox" value="@permission.Id" name="Permissions" onchange="permission.selectChildren(this)" @(Model.GroupUserPermissionIds.Contains(permission.Id) ? "checked='checked'" : "") />
                            </label>
                        }
                </text>
            }
            else
            {
                <text>
                <li class='line_@permission.Id'>
                    <label title='@permission.Code'>
                        <input type="checkbox" disabled="disabled" value="@permission.Id" @(Model.GroupUserPermissionIds.Contains(permission.Id) ? "checked='checked'" : "") />
                    </label>
                </text>
            }
            @:@permission.DepartmentName
                    }
        else
        {
            <text>
            <li class='line_@permission.Id'>
                <a href="javasciprt:void(0)" title='@permission.DepartmentName'> @permission.DepartmentName</a>
            </text>}
        permissionIndex++;
    }
    for (var i = 1; i < currentlvl; i++)
    {
        @:</li></ul>
    }
}
